plugins {
    id "net.minecrell.licenser" version "0.4.1"
    id "net.researchgate.release" version "2.8.1"
    id "com.techshroom.incise-blue" version "0.5.7"
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = 'me.kenzierocks.ourtube.OurTube'

inciseBlue {
    ide()
    license()
    util {
        javaVersion = JavaVersion.VERSION_1_8
    }
}

license {
    exclude '**/me/kenzierocks/ourtube/netty/SimpleHttpServer.java'
}

def JACKSON = '2.10.3'
configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 10, 'minutes'
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    implementation(platform("com.fasterxml.jackson:jackson-bom:$JACKSON"))
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    implementation 'com.discord4j:Discord4J:2.10.1'
    implementation 'com.sedmelluq:lavaplayer:1.2.63'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.25.Final'

    implementation 'org.bytedeco.javacpp-presets:ffmpeg-platform:3.4.2-1.4.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.11.0'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-guava') {
        exclude(group: "com.google.guava", module: "guava")
    }

    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev189-1.23.0'

    compileOnly group: 'com.techshroom', name: 'jsr305-plus', version: '0.0.1'

    implementation group: 'com.google.guava', name: 'guava'
    constraints {
        implementation(group: 'com.google.guava', name: 'guava') {
            version {
                require("[28.0-jre,29.0-jre[")
                prefer("28.1-jre")
            }
            because("it's what we're using")
        }
    }
    def autoService = "1.0-rc6"
    compileOnly group: 'com.google.auto.service', name: 'auto-service-annotations', version: autoService
    annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: autoService
    compileOnly group: 'com.google.auto.value', name: 'auto-value-annotations', version: '1.6.2'
    annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: '1.6.2'

    testImplementation group: 'junit', name: 'junit', version: '4.12'

}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-processing', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
    options.incremental = true
    options.fork = true
}
